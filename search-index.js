var searchIndex={};
searchIndex["grin_wallet_api"] = {"doc":"Higher level wallet functions which can be used by callers…","i":[[3,"Foreign","grin_wallet_api","Main interface into all wallet API functions. Wallet APIs…",null,null],[12,"wallet_inst","","Wallet instance",0,null],[12,"doctest_mode","","Flag to normalize some output during testing. Can mostly…",0,null],[3,"Owner","","Main interface into all wallet API functions. Wallet APIs…",null,null],[12,"wallet_inst","","contain all methods to manage the wallet",1,null],[12,"doctest_mode","","Flag to normalize some output during testing. Can mostly…",1,null],[12,"shared_key","","Share ECDH key",1,null],[12,"updater_running","","Stop state for update thread",1,null],[3,"ECDHPubkey","","Wrapper for ECDH Public keys",null,null],[12,"ecdh_pubkey","","public key, flattened",2,null],[3,"EncryptedRequest","","Wrapper for secure JSON requests",null,null],[12,"jsonrpc","","JSON RPC response",3,null],[12,"method","","method",3,null],[12,"id","","id",3,null],[12,"params","","Body params, which includes nonce and encrypted request",3,null],[3,"EncryptedResponse","","Wrapper for secure JSON requests",null,null],[12,"jsonrpc","","JSON RPC response",4,null],[12,"id","","id",4,null],[12,"result","","result",4,null],[3,"EncryptionErrorResponse","","Wrapper for encryption error responses",null,null],[12,"jsonrpc","","JSON RPC response",5,null],[12,"id","","id",5,null],[12,"error","","error",5,null],[3,"PubAddress","","Wrapper for dalek public keys, used as addresses",null,null],[12,"address","","Public address",6,null],[3,"Token","","Wrapper for API Tokens",null,null],[12,"keychain_mask","","Token to XOR mask against the stored wallet seed",7,null],[4,"ForeignCheckMiddlewareFn","","Middleware Identifiers for each function",null,null],[13,"CheckVersion","","check_version",8,null],[13,"BuildCoinbase","","build_coinbase",8,null],[13,"VerifySlateMessages","","verify_slate_messages",8,null],[13,"ReceiveTx","","receive_tx",8,null],[13,"FinalizeInvoiceTx","","finalize_invoice_tx",8,null],[4,"foreign_rpc_client","","Helper module for jsonrpc clients. Automatically generated…",null,null],[4,"JsonId","","Represents a compliant JSON RPC 2.0 id. Valid id: Integer,…",null,null],[13,"IntId","","Integer Id",9,null],[13,"StrId","","String Id",9,null],[5,"run_doctest_foreign","","helper to set up a real environment to run integrated…",null,[[["value"],["str"],["u64"],["bool"]],[["result",["option","string"]],["string"],["option",["value"]]]]],[5,"run_doctest_owner","","helper to set up a real environment to run integrated…",null,[[["value"],["str"],["u64"],["bool"]],[["result",["option","string"]],["string"],["option",["value"]]]]],[11,"new","","Create a new API instance with the given wallet instance.…",0,[[["foreigncheckmiddleware"],["option",["secretkey"]],["arc",["mutex"]],["secretkey"],["mutex",["box"]],["option",["foreigncheckmiddleware"]]],["self"]]],[11,"check_version","","Return the version capabilities of the running ForeignApi…",0,[[["self"]],[["error"],["versioninfo"],["result",["versioninfo","error"]]]]],[11,"build_coinbase","","Builds a new unconfirmed coinbase output in the wallet,…",0,[[["blockfees"],["self"]],[["result",["cbdata","error"]],["cbdata"],["error"]]]],[11,"verify_slate_messages","","Verifies all messages in the slate match their public keys.",0,[[["self"],["slate"]],[["result",["error"]],["error"]]]],[11,"receive_tx","","Recieve a tranaction created by another party, returning…",0,[[["string"],["str"],["option",["string"]],["option",["str"]],["self"],["slate"]],[["slate"],["result",["slate","error"]],["error"]]]],[11,"finalize_invoice_tx","","Finalizes an invoice transaction initiated by this…",0,[[["self"],["slate"]],[["slate"],["result",["slate","error"]],["error"]]]],[11,"check_version","","Request generator for jsonrpc clients. Automatically…",10,[[],[["argserializeerror"],["result",["boundmethod","argserializeerror"]],["boundmethod",["result"]]]]],[11,"build_coinbase","","Request generator for jsonrpc clients. Automatically…",10,[[["blockfees"]],[["argserializeerror"],["result",["boundmethod","argserializeerror"]],["boundmethod",["result"]]]]],[11,"verify_slate_messages","","Request generator for jsonrpc clients. Automatically…",10,[[["versionedslate"]],[["result",["boundmethod","argserializeerror"]],["argserializeerror"],["boundmethod",["result"]]]]],[11,"receive_tx","","Request generator for jsonrpc clients. Automatically…",10,[[["option",["string"]],["versionedslate"],["string"]],[["argserializeerror"],["boundmethod",["result"]],["result",["boundmethod","argserializeerror"]]]]],[11,"finalize_invoice_tx","","Request generator for jsonrpc clients. Automatically…",10,[[["versionedslate"]],[["argserializeerror"],["boundmethod",["result"]],["result",["boundmethod","argserializeerror"]]]]],[11,"new","","Create a new API instance with the given wallet instance.…",1,[[["mutex",["box"]],["sender",["statusmessage"]],["arc",["mutex"]],["option",["sender"]]],["self"]]],[11,"set_tor_config","","Set the TOR configuration for this instance of the…",1,[[["torconfig"],["self"],["option",["torconfig"]]]]],[11,"accounts","","Returns a list of accounts stored in the wallet (i.e.…",1,[[["option",["secretkey"]],["self"],["secretkey"]],[["vec",["acctpathmapping"]],["result",["vec","error"]],["error"]]]],[11,"create_account_path","","Creates a new 'account', which is a mapping of a…",1,[[["str"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["identifier","error"]],["error"],["identifier"]]]],[11,"set_active_account","","Sets the wallet's currently active account. This sets the…",1,[[["str"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"retrieve_outputs","","Returns a list of outputs from the active account in the…",1,[[["bool"],["u32"],["option",["u32"]],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"retrieve_txs","","Returns a list of Transaction Log Entries from the active…",1,[[["secretkey"],["u32"],["option",["secretkey"]],["bool"],["uuid"],["option",["uuid"]],["option",["u32"]],["self"]],[["result",["error"]],["error"]]]],[11,"retrieve_summary_info","","Returns summary information from the active account in the…",1,[[["bool"],["u64"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"init_send_tx","","Initiates a new transaction as the sender, creating a new…",1,[[["vec",["str"]],["option",["vec"]],["inittxargs"],["usize"],["option",["secretkey"]],["self"],["secretkey"]],[["slate"],["result",["slate","error"]],["error"]]]],[11,"issue_invoice_tx","","Issues a new invoice transaction slate, essentially a…",1,[[["issueinvoicetxargs"],["option",["secretkey"]],["self"],["secretkey"]],[["slate"],["result",["slate","error"]],["error"]]]],[11,"process_invoice_tx","","Processes an invoice tranaction created by another party,…",1,[[["slate"],["inittxargs"],["option",["secretkey"]],["self"],["secretkey"]],[["slate"],["result",["slate","error"]],["error"]]]],[11,"tx_lock_outputs","","Locks the outputs associated with the inputs to the…",1,[[["slate"],["string"],["option",["string"]],["usize"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"finalize_tx","","Finalizes a transaction, after all parties have filled in…",1,[[["slate"],["option",["secretkey"]],["self"],["secretkey"]],[["slate"],["result",["slate","error"]],["error"]]]],[11,"post_tx","","Posts a completed transaction to the listening node for…",1,[[["transaction"],["bool"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"cancel_tx","","Cancels a transaction. This entails: * Setting the…",1,[[["option",["u32"]],["u32"],["option",["uuid"]],["uuid"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"get_stored_tx","","Retrieves the stored transaction associated with a…",1,[[["txlogentry"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["option","error"]],["option",["transaction"]],["error"]]]],[11,"load_stored_tx","","Loads a stored transaction from a file",1,[[["string"],["self"]],[["result",["transaction","error"]],["transaction"],["error"]]]],[11,"verify_slate_messages","","Verifies all messages in the slate match their public keys.",1,[[["slate"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"scan","","Scans the entire UTXO set from the node, identify which…",1,[[["option",["u64"]],["u64"],["bool"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"dump_wallet_data","","Dump wallet data (outputs,transactions) into the logs",1,[[["string"],["self"],["option",["string"]]],[["result",["error"]],["error"]]]],[11,"node_height","","Retrieves the last known height known by the wallet. This…",1,[[["option",["secretkey"]],["self"],["secretkey"]],[["nodeheightresult"],["result",["nodeheightresult","error"]],["error"]]]],[11,"get_top_level_directory","","Retrieve the top-level directory for the wallet. This…",1,[[["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"set_top_level_directory","","Set the top-level directory for the wallet. This directory…",1,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"create_config","","Create a `mwc-wallet.toml` configuration file in the…",1,[[["option",["walletconfig"]],["loggingconfig"],["torconfig"],["option",["loggingconfig"]],["option",["torconfig"]],["walletconfig"],["option",["mqsconfig"]],["chaintypes"],["self"],["mqsconfig"]],[["result",["error"]],["error"]]]],[11,"create_wallet","","Creates a new wallet seed and empty wallet database in the…",1,[[["str"],["option",["zeroingstring"]],["zeroingstring"],["option",["str"]],["u32"],["self"]],[["result",["error"]],["error"]]]],[11,"open_wallet","","`Opens` a wallet, populating the internal keychain with…",1,[[["str"],["zeroingstring"],["option",["str"]],["self"],["bool"]],[["result",["option","error"]],["option",["secretkey"]],["error"]]]],[11,"close_wallet","","`Close` a wallet, removing the master seed from memory.",1,[[["str"],["self"],["option",["str"]]],[["result",["error"]],["error"]]]],[11,"get_mnemonic","","Return the BIP39 mnemonic for the given wallet. This…",1,[[["str"],["zeroingstring"],["option",["str"]],["self"]],[["zeroingstring"],["result",["zeroingstring","error"]],["error"]]]],[11,"change_password","","Changes a wallet's password, meaning the old seed file is…",1,[[["str"],["zeroingstring"],["option",["str"]],["self"]],[["result",["error"]],["error"]]]],[11,"delete_wallet","","Deletes a wallet, removing the config file, seed file and…",1,[[["str"],["self"],["option",["str"]]],[["result",["error"]],["error"]]]],[11,"start_updater","","Starts a background wallet update thread, which performs…",1,[[["duration"],["option",["secretkey"]],["self"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"stop_updater","","Stops the background update thread. If the updater is…",1,[[["self"]],[["result",["error"]],["error"]]]],[11,"get_updater_messages","","Retrieve messages from the updater thread, up to `count`…",1,[[["self"],["usize"]],[["result",["vec","error"]],["vec",["statusmessage"]],["error"]]]],[11,"get_public_proof_address","","Retrieve the public proof \"addresses\" associated with the…",1,[[["u32"],["option",["secretkey"]],["self"],["secretkey"]],[["dalekpublickey"],["error"],["result",["dalekpublickey","error"]]]]],[11,"proof_address_from_onion_v3","","Helper function to convert an Onion v3 address to a…",1,[[["str"],["self"]],[["dalekpublickey"],["error"],["result",["dalekpublickey","error"]]]]],[11,"retrieve_payment_proof","","Returns a single, exportable PaymentProof from a completed…",1,[[["secretkey"],["u32"],["option",["secretkey"]],["bool"],["uuid"],["option",["uuid"]],["option",["u32"]],["self"]],[["paymentproof"],["error"],["result",["paymentproof","error"]]]]],[11,"verify_payment_proof","","Verifies a PaymentProof This process entails:",1,[[["paymentproof"],["option",["secretkey"]],["self"],["secretkey"]],[["error"],["result",["error"]]]]],[11,"from_json","","from json",3,[[["value"],["jsonid"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"as_json_value","","return serialize JSON self",3,[[["self"]],[["result",["value","error"]],["value"],["error"]]]],[11,"as_json_str","","return serialized JSON self as string",3,[[["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"decrypt","","Return decrypted body",3,[[["secretkey"],["self"]],[["result",["value","error"]],["value"],["error"]]]],[11,"from_json","","from json",4,[[["value"],["jsonid"],["secretkey"]],[["result",["error"]],["error"]]]],[11,"as_json_value","","return serialize JSON self",4,[[["self"]],[["result",["value","error"]],["value"],["error"]]]],[11,"as_json_str","","return serialized JSON self as string",4,[[["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"decrypt","","Return decrypted body",4,[[["secretkey"],["self"]],[["result",["value","error"]],["value"],["error"]]]],[11,"new","","Create new response",5,[[["str"],["u64"],["i32"]],["self"]]],[11,"as_json_value","","return serialized JSON self",5,[[["self"]],["value"]]],[6,"ForeignCheckMiddleware","","ForeignAPI Middleware Check callback",null,null],[8,"ForeignRpc","","Public definition used to generate Foreign jsonrpc api. *…",null,null],[10,"check_version","","Networked version of Foreign::check_version.",11,[[["self"]],[["result",["versioninfo","errorkind"]],["versioninfo"],["errorkind"]]]],[10,"build_coinbase","","Networked Legacy (non-secure token) version of…",11,[[["blockfees"],["self"]],[["result",["versionedcoinbase","errorkind"]],["errorkind"],["versionedcoinbase"]]]],[10,"verify_slate_messages","","Networked version of Foreign::verify_slate_messages.",11,[[["versionedslate"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[10,"receive_tx","","Networked version of Foreign::receive_tx.",11,[[["option",["string"]],["versionedslate"],["self"],["string"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"finalize_invoice_tx","","Networked version of Foreign::finalize_invoice_tx.",11,[[["versionedslate"],["self"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[8,"OwnerRpc","","Public definition used to generate Owner jsonrpc api. *…",null,null],[10,"accounts","","Networked version of Owner::accounts.",12,[[["self"]],[["vec",["acctpathmapping"]],["errorkind"],["result",["vec","errorkind"]]]]],[10,"create_account_path","","Networked version of Owner::create_account_path.",12,[[["string"],["self"]],[["identifier"],["errorkind"],["result",["identifier","errorkind"]]]]],[10,"set_active_account","","Networked version of Owner::set_active_account.",12,[[["string"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[10,"retrieve_outputs","","Networked version of Owner::retrieve_outputs.",12,[[["option",["u32"]],["u32"],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[10,"retrieve_txs","","Networked version of Owner::retrieve_txs.",12,[[["option",["u32"]],["u32"],["uuid"],["option",["uuid"]],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[10,"retrieve_summary_info","","Networked version of Owner::retrieve_summary_info.",12,[[["u64"],["self"],["bool"]],[["errorkind"],["result",["errorkind"]]]]],[10,"init_send_tx","","Networked version of Owner::init_send_tx.",12,[[["self"],["inittxargs"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"issue_invoice_tx","","Networked version of Owner::issue_invoice_tx.",12,[[["issueinvoicetxargs"],["self"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"process_invoice_tx","","Networked version of Owner::process_invoice_tx.",12,[[["versionedslate"],["self"],["inittxargs"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"tx_lock_outputs","","Networked version of Owner::tx_lock_outputs.",12,[[["versionedslate"],["self"],["usize"]],[["errorkind"],["result",["errorkind"]]]]],[10,"finalize_tx","","Networked version of Owner::finalize_tx.",12,[[["versionedslate"],["self"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"post_tx","","Networked version of Owner::post_tx.",12,[[["bool"],["self"],["transactionv3"]],[["errorkind"],["result",["errorkind"]]]]],[10,"cancel_tx","","Networked version of Owner::cancel_tx.",12,[[["u32"],["uuid"],["option",["uuid"]],["self"],["option",["u32"]]],[["errorkind"],["result",["errorkind"]]]]],[10,"get_stored_tx","","Networked version of Owner::get_stored_tx.",12,[[["self"],["txlogentryapi"]],[["option",["transactionv3"]],["errorkind"],["result",["option","errorkind"]]]]],[10,"verify_slate_messages","","Networked version of Owner::verify_slate_messages.",12,[[["versionedslate"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[10,"scan","","Networked version of Owner::scan.",12,[[["option",["u64"]],["bool"],["self"],["u64"]],[["errorkind"],["result",["errorkind"]]]]],[10,"node_height","","Networked version of Owner::node_height.",12,[[["self"]],[["nodeheightresult"],["errorkind"],["result",["nodeheightresult","errorkind"]]]]],[8,"OwnerRpcS","","Public definition used to generate Owner jsonrpc api.…",null,null],[10,"accounts","","Networked version of Owner::accounts.",13,[[["self"],["token"]],[["vec",["acctpathmapping"]],["errorkind"],["result",["vec","errorkind"]]]]],[10,"create_account_path","","Networked version of Owner::create_account_path.",13,[[["string"],["self"],["token"]],[["identifier"],["errorkind"],["result",["identifier","errorkind"]]]]],[10,"set_active_account","","Networked version of Owner::set_active_account.",13,[[["string"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[10,"retrieve_outputs","","Networked version of Owner::retrieve_outputs.",13,[[["token"],["u32"],["option",["u32"]],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[10,"retrieve_txs","","Networked version of Owner::retrieve_txs.",13,[[["token"],["u32"],["option",["u32"]],["uuid"],["option",["uuid"]],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[10,"retrieve_summary_info","","Networked version of Owner::retrieve_summary_info.",13,[[["token"],["u64"],["self"],["bool"]],[["errorkind"],["result",["errorkind"]]]]],[10,"init_send_tx","","Networked version of Owner::init_send_tx.",13,[[["inittxargs"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"issue_invoice_tx","","Networked version of Owner::issue_invoice_tx.",13,[[["issueinvoicetxargs"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"process_invoice_tx","","Networked version of Owner::process_invoice_tx.",13,[[["inittxargs"],["versionedslate"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"tx_lock_outputs","","Networked version of Owner::tx_lock_outputs.",13,[[["usize"],["versionedslate"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[10,"finalize_tx","","Networked version of Owner::finalize_tx.",13,[[["versionedslate"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[10,"post_tx","","Networked version of Owner::post_tx.",13,[[["token"],["bool"],["transactionv3"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[10,"cancel_tx","","Networked version of Owner::cancel_tx.",13,[[["option",["u32"]],["u32"],["uuid"],["option",["uuid"]],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[10,"get_stored_tx","","Networked version of Owner::get_stored_tx.",13,[[["txlogentryapi"],["self"],["token"]],[["option",["transactionv3"]],["errorkind"],["result",["option","errorkind"]]]]],[10,"verify_slate_messages","","Networked version of Owner::verify_slate_messages.",13,[[["versionedslate"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[10,"scan","","Networked version of Owner::scan.",13,[[["option",["u64"]],["u64"],["bool"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[10,"node_height","","Networked version of Owner::node_height.",13,[[["self"],["token"]],[["nodeheightresult"],["errorkind"],["result",["nodeheightresult","errorkind"]]]]],[10,"init_secure_api","","Initializes the secure JSON-RPC API. This function must be…",13,[[["self"],["ecdhpubkey"]],[["errorkind"],["ecdhpubkey"],["result",["ecdhpubkey","errorkind"]]]]],[10,"get_top_level_directory","","Networked version of Owner::get_top_level_directory.",13,[[["self"]],[["errorkind"],["result",["string","errorkind"]],["string"]]]],[10,"set_top_level_directory","","Networked version of Owner::set_top_level_directory. `#…",13,[[["self"],["string"]],[["errorkind"],["result",["errorkind"]]]]],[10,"create_config","","Networked version of Owner::create_config.",13,[[["option",["walletconfig"]],["loggingconfig"],["torconfig"],["option",["loggingconfig"]],["walletconfig"],["option",["torconfig"]],["chaintypes"],["option",["mqsconfig"]],["mqsconfig"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[10,"create_wallet","","Networked version of Owner::create_wallet. `#…",13,[[["u32"],["option",["string"]],["self"],["string"]],[["errorkind"],["result",["errorkind"]]]]],[10,"open_wallet","","Networked version of Owner::open_wallet. `#…",13,[[["option",["string"]],["self"],["string"]],[["errorkind"],["result",["token","errorkind"]],["token"]]]],[10,"close_wallet","","Networked version of Owner::close_wallet. `#…",13,[[["string"],["self"],["option",["string"]]],[["errorkind"],["result",["errorkind"]]]]],[10,"get_mnemonic","","Networked version of Owner::get_mnemonic. `#…",13,[[["option",["string"]],["self"],["string"]],[["errorkind"],["result",["string","errorkind"]],["string"]]]],[10,"change_password","","Networked version of Owner::change_password. `#…",13,[[["option",["string"]],["self"],["string"]],[["errorkind"],["result",["errorkind"]]]]],[10,"delete_wallet","","Networked version of Owner::delete_wallet. `#…",13,[[["string"],["self"],["option",["string"]]],[["errorkind"],["result",["errorkind"]]]]],[10,"start_updater","","Networked version of Owner::start_updated. `#…",13,[[["u32"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[10,"stop_updater","","Networked version of Owner::stop_updater. `#…",13,[[["self"]],[["errorkind"],["result",["errorkind"]]]]],[10,"get_updater_messages","","Networked version of Owner::get_updater_messages. `#…",13,[[["u32"],["self"]],[["result",["vec","errorkind"]],["vec",["statusmessage"]],["errorkind"]]]],[10,"get_public_proof_address","","Networked version of Owner::get_public_proof_address. `#…",13,[[["u32"],["self"],["token"]],[["pubaddress"],["result",["pubaddress","errorkind"]],["errorkind"]]]],[10,"proof_address_from_onion_v3","","Networked version of Owner::proof_address_from_onion_v3.…",13,[[["self"],["string"]],[["pubaddress"],["result",["pubaddress","errorkind"]],["errorkind"]]]],[10,"retrieve_payment_proof","","Networked version of Owner::retrieve_payment_proof. `#…",13,[[["token"],["u32"],["option",["u32"]],["uuid"],["option",["uuid"]],["self"],["bool"]],[["paymentproof"],["result",["paymentproof","errorkind"]],["errorkind"]]]],[10,"verify_payment_proof","","Networked version of Owner::verify_payment_proof. `#…",13,[[["paymentproof"],["self"],["token"]],[["result",["errorkind"]],["errorkind"]]]],[10,"set_tor_config","","Networked version of Owner::set_tor_config. `#…",13,[[["torconfig"],["self"],["option",["torconfig"]]],[["errorkind"],["result",["errorkind"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"borrow_replacement","","",0,[[["t"]],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"try_into","","",0,[[],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"borrow_replacement","","",1,[[["t"]],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"try_into","","",1,[[],["result"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone_any","","",2,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",2,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",2,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",2,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",2,[[["t"]],["t"]]],[11,"clone_boxed","","",2,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",2,[[["self"]]]],[11,"clone_boxed","","",2,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",2,[[["self"]]]],[11,"vzip","","",2,[[],["v"]]],[11,"try_into","","",2,[[],["result"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"clone_any","","",3,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",3,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",3,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",3,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",3,[[["t"]],["t"]]],[11,"clone_boxed","","",3,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",3,[[["self"]]]],[11,"clone_boxed","","",3,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",3,[[["self"]]]],[11,"vzip","","",3,[[],["v"]]],[11,"try_into","","",3,[[],["result"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"clone_any","","",4,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",4,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",4,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",4,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",4,[[["t"]],["t"]]],[11,"clone_boxed","","",4,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",4,[[["self"]]]],[11,"clone_boxed","","",4,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",4,[[["self"]]]],[11,"vzip","","",4,[[],["v"]]],[11,"try_into","","",4,[[],["result"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"clone_any","","",5,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",5,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",5,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",5,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",5,[[["t"]],["t"]]],[11,"clone_boxed","","",5,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",5,[[["self"]]]],[11,"clone_boxed","","",5,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",5,[[["self"]]]],[11,"vzip","","",5,[[],["v"]]],[11,"try_into","","",5,[[],["result"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"clone_any","","",6,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",6,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",6,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",6,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",6,[[["t"]],["t"]]],[11,"clone_boxed","","",6,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",6,[[["self"]]]],[11,"clone_boxed","","",6,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",6,[[["self"]]]],[11,"vzip","","",6,[[],["v"]]],[11,"try_into","","",6,[[],["result"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"clone_any","","",7,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",7,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",7,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",7,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",7,[[["t"]],["t"]]],[11,"clone_boxed","","",7,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",7,[[["self"]]]],[11,"clone_boxed","","",7,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",7,[[["self"]]]],[11,"vzip","","",7,[[],["v"]]],[11,"try_into","","",7,[[],["result"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"borrow_replacement","","",8,[[["t"]],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"try_into","","",8,[[],["result"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"borrow_replacement","","",10,[[["t"]],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"try_into","","",10,[[],["result"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"clone_any","","",9,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send","","",9,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_sync","","",9,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"clone_any_send_sync","","",9,[[["self"]],[["cloneany"],["box",["cloneany"]]]]],[11,"borrow_replacement","","",9,[[["t"]],["t"]]],[11,"clone_boxed","","",9,[[["self"]],[["defaultfeatures"],["box",["defaultfeatures"]]]]],[11,"self_address_mut","","",9,[[["self"]]]],[11,"clone_boxed","","",9,[[["self"]],[["box",["nonsyncfeatures"]],["nonsyncfeatures"]]]],[11,"self_address_mut","","",9,[[["self"]]]],[11,"vzip","","",9,[[],["v"]]],[11,"try_into","","",9,[[],["result"]]],[11,"check_version","","",0,[[["self"]],[["result",["versioninfo","errorkind"]],["versioninfo"],["errorkind"]]]],[11,"build_coinbase","","",0,[[["blockfees"],["self"]],[["result",["versionedcoinbase","errorkind"]],["errorkind"],["versionedcoinbase"]]]],[11,"verify_slate_messages","","",0,[[["versionedslate"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[11,"receive_tx","","",0,[[["option",["string"]],["versionedslate"],["self"],["string"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"finalize_invoice_tx","","",0,[[["versionedslate"],["self"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"accounts","","",1,[[["self"]],[["vec",["acctpathmapping"]],["errorkind"],["result",["vec","errorkind"]]]]],[11,"create_account_path","","",1,[[["string"],["self"]],[["identifier"],["errorkind"],["result",["identifier","errorkind"]]]]],[11,"set_active_account","","",1,[[["string"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[11,"retrieve_outputs","","",1,[[["option",["u32"]],["u32"],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[11,"retrieve_txs","","",1,[[["option",["u32"]],["u32"],["uuid"],["option",["uuid"]],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[11,"retrieve_summary_info","","",1,[[["u64"],["self"],["bool"]],[["errorkind"],["result",["errorkind"]]]]],[11,"init_send_tx","","",1,[[["self"],["inittxargs"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"issue_invoice_tx","","",1,[[["issueinvoicetxargs"],["self"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"process_invoice_tx","","",1,[[["versionedslate"],["self"],["inittxargs"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"finalize_tx","","",1,[[["versionedslate"],["self"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"tx_lock_outputs","","",1,[[["versionedslate"],["self"],["usize"]],[["errorkind"],["result",["errorkind"]]]]],[11,"cancel_tx","","",1,[[["u32"],["uuid"],["option",["uuid"]],["self"],["option",["u32"]]],[["errorkind"],["result",["errorkind"]]]]],[11,"get_stored_tx","","",1,[[["self"],["txlogentryapi"]],[["option",["transactionv3"]],["errorkind"],["result",["option","errorkind"]]]]],[11,"post_tx","","",1,[[["bool"],["self"],["transactionv3"]],[["errorkind"],["result",["errorkind"]]]]],[11,"verify_slate_messages","","",1,[[["versionedslate"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[11,"scan","","",1,[[["option",["u64"]],["bool"],["self"],["u64"]],[["errorkind"],["result",["errorkind"]]]]],[11,"node_height","","",1,[[["self"]],[["nodeheightresult"],["errorkind"],["result",["nodeheightresult","errorkind"]]]]],[11,"accounts","","",1,[[["self"],["token"]],[["vec",["acctpathmapping"]],["errorkind"],["result",["vec","errorkind"]]]]],[11,"create_account_path","","",1,[[["string"],["self"],["token"]],[["identifier"],["errorkind"],["result",["identifier","errorkind"]]]]],[11,"set_active_account","","",1,[[["string"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[11,"retrieve_outputs","","",1,[[["token"],["u32"],["option",["u32"]],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[11,"retrieve_txs","","",1,[[["token"],["u32"],["option",["u32"]],["uuid"],["option",["uuid"]],["self"],["bool"]],[["result",["errorkind"]],["errorkind"]]]],[11,"retrieve_summary_info","","",1,[[["token"],["u64"],["self"],["bool"]],[["errorkind"],["result",["errorkind"]]]]],[11,"init_send_tx","","",1,[[["inittxargs"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"issue_invoice_tx","","",1,[[["issueinvoicetxargs"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"process_invoice_tx","","",1,[[["inittxargs"],["versionedslate"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"finalize_tx","","",1,[[["versionedslate"],["self"],["token"]],[["result",["versionedslate","errorkind"]],["versionedslate"],["errorkind"]]]],[11,"tx_lock_outputs","","",1,[[["usize"],["versionedslate"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[11,"cancel_tx","","",1,[[["option",["u32"]],["u32"],["uuid"],["option",["uuid"]],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[11,"get_stored_tx","","",1,[[["txlogentryapi"],["self"],["token"]],[["option",["transactionv3"]],["errorkind"],["result",["option","errorkind"]]]]],[11,"post_tx","","",1,[[["token"],["bool"],["transactionv3"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[11,"verify_slate_messages","","",1,[[["versionedslate"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[11,"scan","","",1,[[["option",["u64"]],["u64"],["bool"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[11,"node_height","","",1,[[["self"],["token"]],[["nodeheightresult"],["errorkind"],["result",["nodeheightresult","errorkind"]]]]],[11,"init_secure_api","","",1,[[["self"],["ecdhpubkey"]],[["errorkind"],["ecdhpubkey"],["result",["ecdhpubkey","errorkind"]]]]],[11,"get_top_level_directory","","",1,[[["self"]],[["errorkind"],["result",["string","errorkind"]],["string"]]]],[11,"set_top_level_directory","","",1,[[["self"],["string"]],[["errorkind"],["result",["errorkind"]]]]],[11,"create_config","","",1,[[["option",["walletconfig"]],["loggingconfig"],["torconfig"],["option",["loggingconfig"]],["walletconfig"],["option",["torconfig"]],["chaintypes"],["option",["mqsconfig"]],["mqsconfig"],["self"]],[["errorkind"],["result",["errorkind"]]]]],[11,"create_wallet","","",1,[[["u32"],["option",["string"]],["self"],["string"]],[["errorkind"],["result",["errorkind"]]]]],[11,"open_wallet","","",1,[[["option",["string"]],["self"],["string"]],[["errorkind"],["result",["token","errorkind"]],["token"]]]],[11,"close_wallet","","",1,[[["string"],["self"],["option",["string"]]],[["errorkind"],["result",["errorkind"]]]]],[11,"get_mnemonic","","",1,[[["option",["string"]],["self"],["string"]],[["errorkind"],["result",["string","errorkind"]],["string"]]]],[11,"change_password","","",1,[[["option",["string"]],["self"],["string"]],[["errorkind"],["result",["errorkind"]]]]],[11,"delete_wallet","","",1,[[["string"],["self"],["option",["string"]]],[["errorkind"],["result",["errorkind"]]]]],[11,"start_updater","","",1,[[["u32"],["self"],["token"]],[["errorkind"],["result",["errorkind"]]]]],[11,"stop_updater","","",1,[[["self"]],[["errorkind"],["result",["errorkind"]]]]],[11,"get_updater_messages","","",1,[[["u32"],["self"]],[["result",["vec","errorkind"]],["vec",["statusmessage"]],["errorkind"]]]],[11,"get_public_proof_address","","",1,[[["u32"],["self"],["token"]],[["pubaddress"],["result",["pubaddress","errorkind"]],["errorkind"]]]],[11,"retrieve_payment_proof","","",1,[[["token"],["u32"],["option",["u32"]],["uuid"],["option",["uuid"]],["self"],["bool"]],[["paymentproof"],["result",["paymentproof","errorkind"]],["errorkind"]]]],[11,"verify_payment_proof","","",1,[[["paymentproof"],["self"],["token"]],[["result",["errorkind"]],["errorkind"]]]],[11,"proof_address_from_onion_v3","","",1,[[["self"],["string"]],[["pubaddress"],["result",["pubaddress","errorkind"]],["errorkind"]]]],[11,"set_tor_config","","",1,[[["torconfig"],["self"],["option",["torconfig"]]],[["errorkind"],["result",["errorkind"]]]]],[11,"drop","","We have a start_updater_log_thread running in the…",1,[[["self"]]]],[11,"clone","","",9,[[["self"]],["jsonid"]]],[11,"clone","","",7,[[["self"]],["token"]]],[11,"clone","","",6,[[["self"]],["pubaddress"]]],[11,"clone","","",2,[[["self"]],["ecdhpubkey"]]],[11,"clone","","",3,[[["self"]],["encryptedrequest"]]],[11,"clone","","",4,[[["self"]],["encryptedresponse"]]],[11,"clone","","",5,[[["self"]],["encryptionerrorresponse"]]],[11,"eq","","",9,[[["self"],["jsonid"]],["bool"]]],[11,"ne","","",9,[[["self"],["jsonid"]],["bool"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"handle","","",11,[[["str"],["self"],["params"]],[["result",["value","error"]],["value"],["error"]]]],[11,"handle","","",12,[[["str"],["self"],["params"]],[["result",["value","error"]],["value"],["error"]]]],[11,"handle","","",13,[[["str"],["self"],["params"]],[["result",["value","error"]],["value"],["error"]]]]],"p":[[3,"Foreign"],[3,"Owner"],[3,"ECDHPubkey"],[3,"EncryptedRequest"],[3,"EncryptedResponse"],[3,"EncryptionErrorResponse"],[3,"PubAddress"],[3,"Token"],[4,"ForeignCheckMiddlewareFn"],[4,"JsonId"],[4,"foreign_rpc_client"],[8,"ForeignRpc"],[8,"OwnerRpc"],[8,"OwnerRpcS"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);